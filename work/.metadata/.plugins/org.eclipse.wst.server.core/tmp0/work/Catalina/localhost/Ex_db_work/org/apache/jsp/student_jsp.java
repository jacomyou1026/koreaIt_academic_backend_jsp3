/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2021-12-13 10:52:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import vo.StudentVo;
import dao.StudentDAO;

public final class student_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("vo.StudentVo");
    _jspx_imports_classes.add("dao.StudentDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
StudentDAO sd = StudentDAO.getInstance(); 
      out.write('\r');
      out.write('\n');
List<StudentVo> sv = sd.selectList(); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function del(name,no){\r\n");
      out.write("		if(confirm(name+\" 학생을 정말 삭제하겠습니까?\")==false){\r\n");
      out.write("			return;\r\n");
      out.write("		}else{\r\n");
      out.write("			location.href =\"st_del.jsp?no=\"+no;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	function update(f){\r\n");
      out.write("		f.submit();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<table border=1>\r\n");
      out.write("		<caption>학생정보</caption>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>번호</th>\r\n");
      out.write("			<th>이름</th>\r\n");
      out.write("			<th>학년</th>\r\n");
      out.write("			<th>키</th>\r\n");
      out.write("			<th>몸무게</th>\r\n");
      out.write("			<th>부서</th>\r\n");
      out.write("			<th>비고</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("		");
for(int i=0;i<sv.size();i++){
			StudentVo st = sv.get(i); 
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>");
      out.print(st.getStudno() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(st.getName() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(st.getGrade() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(st.getHeight() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(st.getWight() );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print(st.getDeptno1() );
      out.write("</td>\r\n");
      out.write("			<td><input type=\"button\" value=\"삭제\"\r\n");
      out.write("				onclick=\"del('");
      out.print(st.getName());
      out.write('\'');
      out.write(',');
      out.print(st.getStudno());
      out.write(");\">\r\n");
      out.write("\r\n");
      out.write("				<form action=\"update_result.jsp\">\r\n");
      out.write("					<input type=\"button\" value=\"수정\" onclick=\"update(this.form)\">\r\n");
      out.write("					<input type=\"hidden\" value=\"");
      out.print(st.getStudno());
      out.write("\" name=\"studno\">\r\n");
      out.write("					<input type=\"hidden\" value=\"");
      out.print(st.getName() );
      out.write("\" name=\"name\">\r\n");
      out.write("					<input type=\"hidden\" value=\"");
      out.print(st.getGrade() );
      out.write("\" name=grade>\r\n");
      out.write("					<input type=\"hidden\" value=\"");
      out.print(st.getHeight() );
      out.write("\" name=\"height\">\r\n");
      out.write("					<input type=\"hidden\" value=\"");
      out.print(st.getWight() );
      out.write("\" name=\"wight\">\r\n");
      out.write("					<input type=\"hidden\" value=\"");
      out.print(st.getDeptno1() );
      out.write("\" name=\"deptno1\">\r\n");
      out.write("\r\n");
      out.write("				</form></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		");
}
      out.write("\r\n");
      out.write("		<tr align=\"center\">\r\n");
      out.write("			<td align=\"center\" colspan=\"7\"><input type=\"button\"\r\n");
      out.write("				value=\"학생 정보 추가\" onclick=\"location.href ='register_db.jsp'\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
